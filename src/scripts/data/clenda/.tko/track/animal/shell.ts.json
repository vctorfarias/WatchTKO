{
    "patches": [
        {
            "label": "2024-11-28_01-52-12",
            "content": "import { Adapter } from \"./student\";\n\nfunction input(): string { let X: any = input; X.L = X.L || require(\"fs\").readFileSync(0).toString().split(/\\r?\\n/); return X.L.shift(); } // _TEST_ONLY_\n//function input(): string { let X: any = input; X.P = X.P || require(\"readline-sync\"); return X.P.question() } // _FREE_ONLY_\nfunction write(text: any, endl=\"\\n\") { process.stdout.write(\"\" + text + endl); }\nexport {};\n\n\nfunction main(): void {\n    let adp: Adapter = new Adapter(\"\", \"\");\n\n    while (true) {\n        write(\"$\", \"\");\n        const line: string = input();\n        const args: string[] = line.split(' ');\n        write(line); //_TEST_ONLY_\n\n        if      (args[0] === \"end\"  ) { break;                               }\n\n        else if (args[0] === \"init\" ) { adp = new Adapter(args[1], args[2]); }\n        else if (args[0] === \"grow\" ) { adp.grow(parseInt(args[1]));         }\n        else if (args[0] === \"noise\") { adp.noise();                         }\n        else if (args[0] === \"show\" ) { adp.show();                          }\n\n        else                          { write(\"fail: comando invalido\");     }\n    }\n}\n\nmain();"
        }
    ]
}